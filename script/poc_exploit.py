from script.lib.console import core_class

def main():
    coreclass = core_class()
    coreclass.do_version()
    choice = ''
    while choice != 'exit':
        coreclass.plugins_enum()
        choice = input('选择功能: ')
        #输出POC列表
        if choice == '1':
            print(coreclass.do_list(0, 5))
        #关键字搜索POC
        elif choice == '2':
            keyword = input('输入关键字:')
            print(coreclass.do_search(keyword))
        #选择一个POC
        elif choice == '3':
            #POC对应所在的文件夹名
            cmsdirname = input('CMS名称：')
            #POC文件名
            plugins = input('输入选择的POC:')
            coreclass.do_use(cmsdirname,plugins)
            choice1 = ''
            while choice1 != 'back':
                coreclass.use_enum()
                choice1 = input('输入执行的功能：')
                #查看POC的信息
                if choice1 == '1':
                    coreclass.do_info(plugins)
                #查看POC的设置
                elif choice1 == '2':
                    coreclass.do_options()
                #设置POC的设置项
                elif choice1 == '3':
                    option = input('输入设置项名称：')
                    value = input('设置值:')
                    coreclass.set_option(option, value)
                elif choice1 == '4':
                    coreclass.do_exploit()
                elif choice1 == '5':
                    coreclass.do_vulns('',plugins)
                elif choice1 == '6':
                    coreclass.do_vulns('save',plugins)
                elif choice1 == '':
                    coreclass.emptychoice()
                    print()
                elif choice1 == 'back':
                    rn = '返回成功！'
                    coreclass.process(rn)
                    break
                else:
                    coreclass.default()
                    break
        elif choice == '4':
            coreclass.do_vulns('','')
        elif choice == '5':
            coreclass.do_vulns('delete', '')
        #更新框架的POC库
        elif choice == '6':
            coreclass.do_update()
        elif choice == '':
            coreclass.emptychoice()
        elif choice == 'exit':
            rn = '程序退出！'
            coreclass.process(rn)
            coreclass.do_exit()
        else:
            coreclass.default()
            coreclass.emptyline()

def poc_jc(poc_name, url):
    coreclass = core_class()
    coreclass.do_use(poc_name)
    coreclass.set_option("URL", url)
    rn = coreclass.do_exploit()
    return rn
if __name__ == "__main__":
    main()

